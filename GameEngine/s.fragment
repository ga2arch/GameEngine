#version 330

in vec3 norm;
in vec3 pos;
in vec2 coord;

uniform vec3 light_pos;
uniform vec3 Kd;
uniform vec3 Ks;
uniform vec3 color_diff;
uniform vec3 color_spec;
uniform vec3 irr;

uniform sampler2D lava_texture;

out vec4 fragColor;

void main() {
    
    vec3 color = texture(lava_texture, coord).rgb;
    vec3 cdiff = color.rgb / 3.14;
    
    float m = 10.0;
    vec3 pv = vec3(-6.0, 6.0, 6.0);
    vec3 v = normalize(pv - pos);
    vec3 Lo = vec3(0.0, 0.0, 0.0);
    vec3 h = normalize(v + light_pos);
    float cosTh = clamp(dot(norm, h), 0, 1);
    float cosTi = clamp(dot(norm, light_pos), 0, 1);
    
    float cosS = dot(normalize(light_pos - pos), normalize(light_pos));
    float cosU = cos(35 * 0.0174532);
    float cosP = cos(20 * 0.0174532);

    float r = length(light_pos - pos);
    
    vec3 i = irr / (r*r);
    if (cosU < cosS && cosS < cosP)
        i = i * pow(((cosS - cosU) / (cosP - cosU)), 2.5);
    
    if (cosS <= cosU)
        i = vec3(0.0);
    
    Lo += ((cdiff + Ks * pow(cosTh, m)) * i * cosTi);
    
    //fragColor = vec4(Lo, 1.0f);
    fragColor = vec4(Lo, 1.0);
}