#version 330

in VS_FS_INTERFACE {
    
    vec3 world_coord;
    vec3 eye_coord;
    vec3 normal;
    
} fragment;

uniform vec3 camera;

out vec4 fragColor;

void main() {
    vec3 light_pos = vec3(0,5,5);
    vec3 diff = vec3(.5, .8, .3);
    vec3 spec = vec3(1,1,1);
    vec3 irr = vec3(20.0);
    float m = 40;
    
    vec3 L = normalize(light_pos - fragment.eye_coord);
    vec3 V = normalize(camera - fragment.eye_coord);
    vec3 H = normalize(L + V);
    
    float cosH = clamp(dot(H, fragment.normal), 0, 1);
    float cosI = clamp(dot(fragment.normal, L), 0, 1);

    vec3 light_dir = normalize(vec3(0,3,-2) - light_pos);
    
    float cosS = dot(light_dir, -L);
    float cosU = cos(20 * 0.01745);
    float cosP = cos(10 * 0.01745);

    float r = length(light_pos - fragment.eye_coord);
    irr = irr / (r);
    
    if (cosU < cosS && cosS < cosP)
        irr = irr * pow ((cosS - cosU) / (cosP - cosU), 2.0);
    
    if (cosS <= cosU)
        irr = vec3(0.0);
    
    vec3 Lo = (diff/3.14 + (m+8)/(3.14*8) * pow(cosH, m)*spec) * irr * cosI;
    
    fragColor = vec4(Lo, 1.0);
}