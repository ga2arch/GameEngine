#version 330

const int MAX_LIGHTS = 10;

layout(location = 0) in vec3 position;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 textcoord;

uniform mat4 proj;
uniform mat4 view;
uniform mat4 model;

uniform mat4 light_view[MAX_LIGHTS];
uniform int lights_num;

out VS_FS_INTERFACE {
    
    vec3 world_coord;
    vec3 eye_coord;
    vec4 shadow_coord[MAX_LIGHTS];
    vec3 normal;
    
} vertex;

const mat4 bias = mat4(0.5, 0.0, 0.0, 0.0,
                       0.0, 0.5, 0.0, 0.0,
                       0.0, 0.0, 0.5, 0.0,
                       0.5, 0.5, 0.5, 1.0);

void main() {
    vec4 world_coord = model * vec4(position, 1.0);
    vec4 eye_coord = view * world_coord;
    vec4 clip_pos = proj * eye_coord;
    
    vertex.world_coord = world_coord.xyz;
    vertex.eye_coord = eye_coord.xyz;
    vertex.normal = transpose(inverse(mat3(view * model))) * normal;
    
    for (int i=0; i < lights_num; i++) {
        vertex.shadow_coord[i] = bias * light_view[i] * world_coord;
    }
    
    gl_Position = clip_pos;
    
}